{"version":3,"sources":["components/Comments/SingleComment/SingleComment.js","components/Comments/Comments.js","components/Post/Post.js","components/Home/Home.js","components/PostDetail/PostDetail.js","components/NotFound/NotFound.js","components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","minWidth","marginTop","padding","avatar","backgroundColor","red","SingleComment","props","classes","comment","name","email","body","imgId","id","Math","floor","random","Card","className","CardHeader","Avatar","aria-label","src","alt","title","toUpperCase","subheader","CardContent","Typography","variant","color","component","Comments","useState","comments","setComments","useEffect","fetch","commentId","then","res","json","data","map","key","Link","onClick","Button","postTitle","fontSize","Post","post","gutterBottom","CardActions","homePage","style","textDecoration","to","Home","posts","setPosts","PostDetail","useParams","setPost","NotFound","grow","flexGrow","menuButton","marginRight","spacing","display","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","renderMobileMenu","IconButton","Badge","badgeContent","aria-controls","aria-haspopup","AppBar","Toolbar","edge","noWrap","InputBase","placeholder","input","inputProps","App","Container","maxWidth","path","exact","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.12d5aceb.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    marginTop: 20,\n    padding: 10,\n  },\n  avatar: {\n    backgroundColor: red[50],\n  },\n}));\n\nconst SingleComment = (props) => {\n  const classes = useStyles();\n\n  const { name, email, body, id } = props.comment;\n\n  //   generate profile image from 50 image of randomuser.me api\n\n  let imgId = id;\n  if (imgId > 50) {\n    imgId = Math.floor(Math.random() * 50) + 1;\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label='recipe' className={classes.avatar}>\n            <img\n              src={`https://randomuser.me/api/portraits/med/women/${imgId}.jpg`}\n              alt=''\n            />\n          </Avatar>\n        }\n        title={name.toUpperCase()}\n        subheader={email}\n      />\n\n      <CardContent>\n        <Typography variant='body2' color='textSecondary' component='p'>\n          {body}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SingleComment;\n","import React, { useEffect, useState } from 'react';\nimport SingleComment from './SingleComment/SingleComment';\nimport Link from '@material-ui/core/Link';\nimport Button from '@material-ui/core/Button';\n\nconst Comments = (props) => {\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      `https://jsonplaceholder.typicode.com/posts/${props.commentId}/comments`\n    )\n      .then((res) => res.json())\n      .then((data) => setComments(data));\n  }, [props.commentId]);\n\n  return (\n    <div>\n      <h3>Comments</h3>\n      {comments.map((comment) => (\n        <SingleComment comment={comment} key={comment.id}></SingleComment>\n      ))}\n\n      <Link onClick={'/home'}>\n      <Button >\n        Go to Homepage\n      </Button>\n      </Link>\n\n\n\n\n    </div>\n    \n  );\n};\n\nexport default Comments;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport Comments from '../Comments/Comments';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    marginTop: 20,\n    padding:10,\n  },\n  postTitle: {\n    fontSize: 24,\n    color: 'red',\n  },\n});\n\nconst Post = (props) => {\n  const { id, title, body } = props.post;\n\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.postTitle} gutterBottom>\n          {title}\n        </Typography>\n\n        <Typography variant='body2' component='p' color='green'>\n          {body}\n        </Typography>\n      </CardContent>\n\n      <CardActions>\n        {props.homePage && (\n          <Link\n            style={{ color: 'inherit', textDecoration: 'inherit' }}\n            to={`/postDetail/${id}`}\n          >\n            <Button variant='contained' color='orange'>\n              See More\n            </Button>\n          </Link>\n        )}\n        {!props.homePage && <Comments commentId={id}></Comments>}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Post;\n","import React, { useEffect, useState } from 'react';\n\nimport Post from '../Post/Post';\n\nconst Home = () => {\n  const [posts, setPosts] = useState([]);\n\n  // load posts from post api\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n      .then((res) => res.json())\n      .then((data) => setPosts(data));\n  }, []);\n\n  return (\n    <div>\n      {/* Show each post using post component */}\n      {posts.map((post) => (\n        <Post key={post.id} post={post} homePage={true}></Post>\n      ))}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Post from '../Post/Post';\n\nconst PostDetail = () => {\n  const { id } = useParams();\n  const [post, setPost] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/posts/${id}`)\n      .then((res) => res.json())\n      .then((data) => setPost(data));\n  }, [id]);\n\n  return (\n    <div>\n      <Post key={post.id} post={post} homePage={false}></Post>\n    </div>\n  );\n};\n\nexport default PostDetail;\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h4>Page is not Found.</h4>\n      <h3>404 Error!</h3>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme) => ({\n\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Social Buddy Portal\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}","import React from 'react';\nimport './App.css';\nimport Home from './components/Home/Home';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport PostDetail from './components/PostDetail/PostDetail';\nimport NotFound from './components/NotFound/NotFound';\nimport { Container, Grid } from '@material-ui/core';\nimport Header from './components/Header/Header';\n\n\nfunction App() {\n  return (\n    <div>\n      <Header></Header>\n      <Container maxWidth=\"md\">\n        <Router>\n          <Switch>\n            <Route path='/postDetail/:id'>\n              <PostDetail></PostDetail>\n            </Route>\n            <Route exact path='/'>\n              <Home />\n            </Route>\n            <Route path='*'>\n              <NotFound></NotFound>\n            </Route>\n          </Switch>\n        </Router>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}